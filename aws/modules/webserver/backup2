terraform {
  required_version = ">= 0.12"
}
locals {
  ssh_user         = "ubuntu"
  key_name         = "suthari"
  private_key_path = "/home/mahesh/test/suthari.pem"
}
resource "aws_subnet" "webserver" {
   vpc_id     = var.vpc_id
   cidr_block = var.cidr_block
}
resource "aws_security_group" "webserver" {
  vpc_id = var.vpc_id

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}
resource "aws_instance" "webserver" {
    ami           = var.ami
    instance_type = var.instance_type
    subnet_id     = aws_subnet.webserver.id 
    security_groups = [aws_security_group.webserver.id]
    associate_public_ip_address = true
    
    tags = {
        Name = "${var.webserver_name} webserver"
   }
   
   provisioner "remote-exec" {
    inline = ["echo 'Wait until SSH is ready'", "sudo apt update -y", "sudo apt install python3 -y", "sudo apt install ansible -y", "echo 'done'"]

    connection {
      type        = "ssh"
      user        = "ubuntu"
      private_key = "${file("../suthari.pem")}"
      host        = "${aws_instance.webserver.public_ip}"
    }
  }
  provisioner "local-exec" {
    command = "ansible-playbook  -i ${aws_instance.webserver.public_ip}, --private-key ${local.private_key_path} nginx.yaml"
  }
}

output "nginx_ip" {
  value = aws_instance.webserver.public_ip
}
